name: Build Vectordb Docker Image for linux/amd64 and linux/arm64

on:
  push:
    branches: [ "main" ]

jobs:
  build:
  
    name: Build Vectordb
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get Current Date 
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"
          
    - name: Build
      env:
        DOCKER_HUB_REPOSITORY: epsilla/vectordb
        SHA_TAG: ${{ github.sha }}
      run: |
        export IMAGE_TAG=${{ steps.date.outputs.date }}
        export IMAGE_TAG_LATEST="latest"
        echo "IMAGE_TAG: ${IMAGE_TAG}"
        echo "SHA: ${SHA_TAG}"
        
        cd ./engine
        echo "\n\nBuild docker image for amd64 firstly\n\n"
        
        docker build --pull -t ${DOCKER_HUB_REPOSITORY}:${IMAGE_TAG_LATEST}-amd64 .
        docker push ${DOCKER_HUB_REPOSITORY}:${IMAGE_TAG_LATEST}-amd64


        echo "\n\nBuild allinone docker image both for amd64 and arm64\n\n"
        
        wget https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-amd64
        chmod +x buildx-v0.11.2.linux-amd64
        mkdir -p $HOME/.docker/cli-plugins
        mv buildx-v0.11.2.linux-amd64 $HOME/.docker/cli-plugins/docker-buildx
        docker buildx create --use
        docker buildx ls
        docker buildx build --build-arg="RELEASE_VERSION=${IMAGE_TAG}" --push --platform linux/amd64,linux/arm64 -t ${DOCKER_HUB_REPOSITORY}:${IMAGE_TAG} -t ${DOCKER_HUB_REPOSITORY}:${IMAGE_TAG_LATEST}  --label "org.opencontainers.image.version"=$IMAGE_TAG .
        



        

        
        


        
